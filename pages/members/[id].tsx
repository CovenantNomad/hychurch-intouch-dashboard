import { useState } from "react"
import { GetServerSidePropsContext, NextPage } from "next"
import Head from "next/head"
import Link from "next/link"
// components
import EditUserInfomation from "../../components/Blocks/Infomation/EditUserInfomation"
import UserInfomation from "../../components/Blocks/Infomation/UserInfomation"
import Layout from "../../components/Layout/Layout"
import { Member } from "../../interface/user"

interface MemberDetailPage {
  userInfo : Member
}

const MemberDetailPage:NextPage<MemberDetailPage> = (props) => {
  const userInfo = props.userInfo
  const [ user, setUser ] = useState<Member>(userInfo)
  const [ editMode, setEditMode ] = useState(false)


  return (
    <Layout>
      <Head>
        <title>청년정보 | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="md:flex md:items-center md:justify-between md:space-x-5">
        <div>
          <h1 className="text-2xl font-bold text-gray-900 mb-1">{user.name}</h1>
          <Link href={`/organizations/${user.cell!.id}`}>
            <a className="text-sm font-medium text-gray-500">
              Cell: {user.cell!.name}
            </a>
          </Link>
        </div>
        <div className="justify-stretch mt-6 flex flex-col-reverse space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-y-0 sm:space-x-3 sm:space-x-reverse md:mt-0 md:flex-row md:space-x-3">
          <button
            type="button"
            className="inline-flex items-center justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-100"
          >
            삭제하기
          </button>
          <button
            type="button"
            onClick={() => setEditMode(!editMode)}
            className="inline-flex items-center justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-100"
          >
            {editMode ? "수정상태" : "편집모드"}
          </button>
        </div>
      </section>
      <section>
        <div className="mx-auto mt-8 grid max-w-3xl grid-cols-1 gap-6 lg:max-w-7xl lg:grid-flow-col-dense lg:grid-cols-3">
          <div className="space-y-4 lg:col-span-2 lg:col-start-1 bg-white shadow sm:rounded-lg px-4 py-5 sm:px-6">
            <h2 id="applicant-information-title" className="text-lg font-medium text-gray-900">
              청년정보
            </h2>
            <div className="border-t border-gray-200 px-4 py-5 sm:px-6">
              {editMode ? 
                <EditUserInfomation
                  id={user.id}
                  name={user.name} 
                  gender={user.gender}
                  isActive={user.isActive}
                  birthday={user.birthday}
                  phone={user.phone}
                  address={user.address}
                  description={user.description}
                  setUser={setUser}
                />
              :
                <UserInfomation 
                  gender={user.gender}
                  isActive={user.isActive}
                  birthday={user.birthday}
                  phone={user.phone}
                  address={user.address}
                  description={user.description}
                />
              }
            </div>
          </div>
          <div className="space-y-6 lg:col-span-1 lg:col-start-3 bg-white shadow sm:rounded-lg px-4 py-5 sm:px-6">
            <h2 id="timeline-title" className="text-lg font-medium text-gray-900">
              예배출석이력
            </h2>
          </div>
        </div>

      </section>
    </Layout>
  )
}

export  const getServerSideProps= (context: GetServerSidePropsContext)=> {
  if (context.query.userInfo && typeof context.query.userInfo === 'string') {
    return {
      props: { 
         userInfo: JSON.parse(context.query.userInfo)
      }
    }
  }

  return {
    props: {}
  }
  
}

export default MemberDetailPage

