import { useState } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
// fetch
import { FindUsersQuery, FindUsersQueryVariables, useFindUsersQuery } from '../../graphql/generated'
import graphlqlRequestClient from '../../client/graphqlRequestClient'
// components
import MemberCard from '../../components/Blocks/Cards/MemberCard'
import SearchBar from '../../components/Atoms/SearchBar/SearchBar'
import Layout from '../../components/Layout/Layout'
import Pagination from '../../components/Blocks/Pagination/Pagination'


const Members: NextPage = () => {
  const [ name, setName ] = useState("")
  const [ pageSize, setPageSize ] = useState(10)
  const [ currentPage, setCurrentPage] = useState(1)

  const { isLoading, data } = useFindUsersQuery<FindUsersQuery, FindUsersQueryVariables>(
    graphlqlRequestClient,
    {
      name,
      limit: pageSize,
      offset: Math.max(currentPage - 1, 0) * pageSize,
    }
  )

  return (
    <Layout>
      <Head>
        <title>청년현황 | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section>
        <header className='flex flex-col lg:flex-row justify-between mb-6 lg:mb-8'>
          <h4 className='text-2xl font-bold tracking-wide'>인터치 청년현황 ({data?.findUsers.totalCount}명)</h4>
          <div className='flex items-center space-x-5 mt-6 lg:mt-0'>
            <SearchBar setName={setName} />
          </div>
        </header>
        {isLoading ? (
          <div className='grid grid-cols-2 gap-4 mb-8 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5'>
            {Array.from({ length: 6 }, (_, index) => index).map(item => (
              <div key={item} className="bg-slate-200 rounded-lg shadow-lg w-30 h-44 lg:h-60 animate-pulse"></div>
            ))}
          </div>
        ) : (
          <>
            <div className='grid grid-cols-2 gap-4 mb-16 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5'>
              {data?.findUsers.nodes.map(member => (
                <MemberCard 
                  key={member.id} 
                  member={member}
                />
              ))}
            </div>
            <Pagination pageSize={pageSize} setPageSize={setPageSize} currentPage={currentPage} setCurrentPage={setCurrentPage} totalCount={data?.findUsers.totalCount || 0}/>
          </>
        )}
      </section>
    </Layout>
  )
}

export default Members
