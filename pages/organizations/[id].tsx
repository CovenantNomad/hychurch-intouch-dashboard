import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import Layout from '../../components/Layout/Layout';
import CellInfomationScreen from '../../components/Screens/Cells/CellInfomationScreen';
import CellTransferScreen from '../../components/Screens/Cells/CellTransferScreen';
import CellReportScreen from '../../components/Screens/Cells/CellReportScreen';
import FullWidthTabs from '../../components/Atoms/Tabs/FullWidthTabs';
import graphlqlRequestClient from '../../client/graphqlRequestClient';
import { FindCellQuery, FindCellQueryVariables, useFindCellQuery } from '../../graphql/generated';
import { useRecoilState } from 'recoil';
import { selectedState } from '../../stores/selectedState';

const CellDetail = () => {
  const { query } = useRouter()
  const [ categoryId, setCategoryId ] = useState<number>(0)
  const [ selectedStatus, setSelectedStatus ] = useRecoilState(selectedState)
  const { isLoading, data } = useFindCellQuery<FindCellQuery, FindCellQueryVariables>(
    graphlqlRequestClient,
    {
      id: Number(query.id)
    },
    {
      enabled: Boolean(query.id),
      staleTime: 5 * 60 * 1000,
      cacheTime: 10 * 60 * 1000
    }
  )

  const categories = [
    { id: 0, 
      name: "셀 정보", 
      component: <CellInfomationScreen />
    },
    { 
      id: 1, 
      name: "셀 보고서", 
      component: <CellReportScreen />
    },
    { 
      id: 2, 
      name: "셀 편성", 
      component: <CellTransferScreen />
    },
  ]

  useEffect(() => {
    if (data) {
      setSelectedStatus({
        ...selectedStatus,
        selectedCell: {
          cellId: data.findCell.id,
          cellName: data.findCell.name
        }
      })
    }
  }, [data])

  return (
    <Layout>
      <Head>
        <title>{query.cellName || data?.findCell.name} | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <section>
        <div className='py-2 '>
          <h1 className="text-2xl font-bold text-gray-900 font-notosans mb-1">{query.cellName || data?.findCell.name}</h1>
        </div>

        <div className='mt-4'>
          <FullWidthTabs 
            tabs={categories} 
            currentTab={categoryId} 
            setCurrentTab={setCategoryId} />
        </div>

        <div className="pt-8 pb-8 md:pt-12 md:pb-12 lg:pt-16 lg:pb-16">
          {categories[categoryId].component}
        </div>
        
      </section>
    </Layout>
  )
}

export default CellDetail
