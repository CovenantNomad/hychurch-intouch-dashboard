import React, { useEffect, useState } from 'react';
import { NextPage } from "next";
import Layout from '../../components/Layout/Layout';
import Head from 'next/head';
import { Cell, FindCellQuery, FindCellQueryVariables, Gender, RoleType, useFindCellQuery } from '../../graphql/generated';
import graphlqlRequestClient from '../../client/graphqlRequestClient';
import { useRouter } from 'next/router';
import Link from 'next/link';

interface TabProps {
  name: string;
  count: number;
  current: boolean;
}

export type SimpleUser = {
  id: string
  name: string
  phone: string
  isActive: boolean
  birthday?: string | null | undefined
  gender?: Gender | null | undefined
  address?: string | null | undefined
  cell?: {
    id: string
    name: string
  } | null | undefined
  roles: RoleType[]
};

const Detail: NextPage = () => {
  const { query } = useRouter()
  const [ tabs, setTabs ] = useState<TabProps[]>(
    [
      { name: 'All', count: 0, current: true },
      { name: 'Active', count: 0, current: false },
      { name: 'Inactive', count: 0, current: false },
    ]
  )
  const [ filterMembers, setFilterMembers ] = useState<SimpleUser[]>([])

  const { isLoading, data } = useFindCellQuery<FindCellQuery, FindCellQueryVariables>(
    graphlqlRequestClient,
    {
      id: Number(query.id)
    },
    {
      enabled: Boolean(query.id),
      onSuccess(data) {
        setFilterMembers(data.findCell.members)
      },
    }
  )

  const onClickHandler = (name: string) =>{
    setTabs(tabs.map(tab => tab.name === name ? {...tab, current: true} : {...tab, current: false}))
    switch (name) {
      case "Active":
        return setFilterMembers(data!.findCell.members.filter(member => member.isActive))
      case "Inactive":
        return setFilterMembers(data!.findCell.members.filter(member => !member.isActive))
      default:
        return setFilterMembers(data!.findCell.members)
    }
  }

  useEffect(() => {
    const totalCount = data?.findCell.members?.length || 0
    const countOfactiveUser = data?.findCell.members?.filter(member => member.isActive).length || 0
    const countOfinactiveUser = data?.findCell.members?.filter(member => !member.isActive).length || 0

    setTabs(
      [
        { name: 'All', count: totalCount, current: true },
        { name: 'Active', count: countOfactiveUser, current: false },
        { name: 'Inactive', count: countOfinactiveUser, current: false },
      ]
    )
  }, [data?.findCell.members])

  return (
    <Layout>
      <Head>
        <title>마이 셀 정보 | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <section>
        <div className='py-4 border-b'>
          <h1 className="text-2xl font-bold text-gray-900 font-notosans mb-1">{data?.findCell.name}</h1>
          {/* <p className="text-sm font-medium text-gray-500">
            00 공동체
          </p> */}
        </div>

        <div className="pt-16 pb-16">
          <h2 className="text-lg font-medium text-gray-900">Cell Members</h2>
          {/* mobile */}
          <div className="sm:hidden">
            <label htmlFor="tabs" className="sr-only">
              Select a tab
            </label>
            <select
              id="tabs"
              name="tabs"
              className="mt-4 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-purple-500 focus:border-purple-500 sm:text-sm rounded-md"
              defaultValue={'All'}
            >
              {tabs.map((tab) => (
                <option key={tab.name}>{tab.name}</option>
              ))}
            </select>
          </div>
          {/* desktop */}
          <div className="hidden sm:block">
            <div className="border-b border-gray-200">
              <nav className="mt-2 -mb-px flex space-x-8" aria-label="Tabs">
                {tabs.map((tab) => (
                  <button
                    key={tab.name}
                    onClick={() => onClickHandler(tab.name)}
                    disabled={isLoading || data === undefined}
                    className={`${tab.current ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200'} whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}
                  >
                    {tab.name}
                    <span
                      className={`${tab.current ? 'bg-purple-100 text-purple-600' : 'bg-gray-100 text-gray-900'}
                        hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block
                      `}
                    >
                      {tab.count}
                    </span>
                  </button>
                ))}
              </nav>
            </div>
          </div>

          {/* Table */}
          <div className="mt-8 flex flex-col">
            <div className="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
              <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                <div className="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                  <table className="min-w-full divide-y divide-gray-300">
                    <thead className="bg-gray-50">
                      <tr>
                        <th scope="col" className="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">
                          Name
                        </th>
                        <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">
                          Gender
                        </th>
                        <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">
                          PhoneNumber
                        </th>
                        <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">
                          Birthday
                        </th>
                        <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
                          <span className="sr-only">Edit</span>
                        </th>
                      </tr>
                    </thead>
                    {!isLoading && filterMembers !== undefined ? (
                      <tbody className="bg-white">
                        {filterMembers.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0).map((person, personIdx) => (
                          <tr key={personIdx} className={personIdx % 2 === 0 ? undefined : 'bg-gray-50'}>
                            <td className="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">
                              {person.name}
                            </td>
                            <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{person.gender === 'MAN' ? "형제" : "자매"}</td>
                            <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{person.phone}</td>
                            <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{person.birthday}</td>
                            <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                              <Link 
                                href={{
                                  pathname: `/members/${person.id}`,
                                  query: {userInfo: JSON.stringify(person)}
                                }}
                                as={`/members/${person.id}`}
                              >
                                <a  className="text-indigo-600 hover:text-indigo-900">
                                  Edit<span className="sr-only">, {person.name}</span>
                                </a>
                              </Link>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    ) : (
                      <div> 로딩중...</div>
                    )
                  }
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </Layout>
  )
}

export default Detail