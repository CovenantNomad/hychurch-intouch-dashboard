import { useCallback, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
// stats
import { useRecoilState } from "recoil";
import { stateSetting } from "../../stores/stateSetting";
// components
import Layout from "../../components/Layout/Layout";
import NewFamilyRegister from "../../components/Templates/NewFamily/NewFamilyRegister";
import NewFamilyManagement from "../../components/Templates/NewFamily/NewFamilyManagement";
import Footer from "../../components/Atoms/Footer";
import TabsWithHeader from "../../components/Atoms/Tabs/TabsWithHeader";
import Container from "../../components/Atoms/Container/Container";
import SectionBackground from "../../components/Atoms/Container/SectionBackground";
import SectionContainer from "../../components/Atoms/Container/SectionContainer";
import PageLayout from "../../components/Layout/PageLayout";

const categories = [
  { id: 0, name: "새가족 등록카드", component: <NewFamilyRegister /> },
  {
    id: 1,
    name: "새가족 명단관리",
    component: <NewFamilyManagement />,
  },
];

const Register: NextPage = () => {
  const [setting, setSetting] = useRecoilState(stateSetting);
  const [categoryId, setCategoryId] = useState<number>(
    setting.newFamilySelectedCategoryId
  );
  const setSettingHandler = useCallback(
    (id: number) => {
      setSetting({
        ...setting,
        newFamilySelectedCategoryId: id,
      });
    },
    [setting, setSetting]
  );

  return (
    <Layout>
      <Head>
        <title>새가족관리 | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageLayout>
        <TabsWithHeader
          title={"새가족부"}
          tabs={categories}
          currentTab={categoryId}
          setCurrentTab={setCategoryId}
          setSettingHandler={setSettingHandler}
        />

        <SectionContainer>{categories[categoryId].component}</SectionContainer>
      </PageLayout>
    </Layout>
  );
};

export default Register;
