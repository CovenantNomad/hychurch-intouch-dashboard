import { useState } from "react";
import { NextPage } from "next";
import { useRouter } from "next/router";
import Head from "next/head";
// components
import Layout from "../../../../components/Layout/Layout";
import Container from "../../../../components/Atoms/Container/Container";
import Spinner from "../../../../components/Atoms/Spinner";
import MemberHeader from "../../../../components/Blocks/Headers/MemberHeader";
import UserInfomation from "../../../../components/Blocks/Infomation/UserInfomation";
import EditUserInfomation from "../../../../components/Blocks/Infomation/EditUserInfomation";
import EmptyStateSimple from "../../../../components/Atoms/EmptyStates/EmptyStateSimple";
// api
import {
  SearchUsersQuery,
  SearchUsersQueryVariables,
  useSearchUsersQuery,
} from "../../../../graphql/generated";
import graphlqlRequestClient from "../../../../client/graphqlRequestClient";

interface MemberDetailPage {}

const MemberDetailPage: NextPage<MemberDetailPage> = () => {
  const router = useRouter();
  const [editMode, setEditMode] = useState(false);

  const { isLoading, data } = useSearchUsersQuery<
    SearchUsersQuery,
    SearchUsersQueryVariables
  >(
    graphlqlRequestClient,
    {
      name: typeof router.query.slug === "string" ? router.query.slug : null,
    },
    {
      staleTime: 3 * 60 * 1000,
    }
  );

  return (
    <Layout>
      <Head>
        <title>청년정보 | INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isLoading ? (
        <div className="w-full h-screen flex justify-center">
          <Spinner />
        </div>
      ) : (
        <>
          {data ? (
            <>
              <MemberHeader
                cellId={data.findUsers.nodes[0].cell?.id}
                cellName={data.findUsers.nodes[0].cell?.name}
                userName={data.findUsers.nodes[0].name}
                editMode={editMode}
                setEditMode={setEditMode}
              />

              {!editMode ? (
                <Container>
                  <section className="grid grid-cols-1 md:grid-cols-6 gap-6 mt-12 pb-12">
                    <div className="md:col-span-2">
                      <UserInfomation
                        name={data.findUsers.nodes[0].name}
                        gender={data.findUsers.nodes[0].gender}
                        isActive={data.findUsers.nodes[0].isActive}
                        birthday={data.findUsers.nodes[0].birthday}
                        phone={data.findUsers.nodes[0].phone}
                        address={data.findUsers.nodes[0].address}
                        description={data.findUsers.nodes[0].description}
                      />
                    </div>
                    <div className="md:col-span-4">
                      <div className="flex gap-4 mb-4">
                        <div className="flex-1 h-[120px] border">
                          올해 예배 출석
                        </div>
                        <div className="flex-1 h-[120px] border">
                          올해 셀모임 출석
                        </div>
                      </div>
                      <div className="h-[240px] border">예배출석 그래프</div>
                    </div>
                  </section>
                </Container>
              ) : (
                <EditUserInfomation
                  id={data.findUsers.nodes[0].id}
                  name={data.findUsers.nodes[0].name}
                  gender={data.findUsers.nodes[0].gender}
                  isActive={data.findUsers.nodes[0].isActive}
                  birthday={data.findUsers.nodes[0].birthday}
                  phone={data.findUsers.nodes[0].phone}
                  address={data.findUsers.nodes[0].address}
                  description={data.findUsers.nodes[0].description}
                  cell={data.findUsers.nodes[0].cell}
                />
              )}
            </>
          ) : (
            <div className="w-full h-screen flex justify-center items-center">
              <EmptyStateSimple warning />
            </div>
          )}
        </>
      )}
    </Layout>
  );
};

// export  const getServerSideProps = async (context: GetServerSidePropsContext)=> {
//   const { data } = await graphlqlRequestClient.request(SearchUsersDocument)

//   console.log(data)
//   return {
//     props: {}
//   }

// }

export default MemberDetailPage;
