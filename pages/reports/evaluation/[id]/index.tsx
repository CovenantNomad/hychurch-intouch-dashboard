import React, { useRef } from "react";
import Layout from "../../../../components/Layout/Layout";
import Head from "next/head";
import PageLayout from "../../../../components/Layout/PageLayout";
import SectionContainer from "../../../../components/Atoms/Container/SectionContainer";
import BlockContainer from "../../../../components/Atoms/Container/BlockContainer";
import ReactToPrint from "react-to-print";
import CellReportTemplate from "../../../../components/Templates/Reports/CellReportTemplate/CellReportTemplate";
import { mockCellRport } from "../../../../constants/mockCellReport";
import CellEvaluationFormPrintTemplate from "../../../../components/Templates/Reports/CellEvaluationFormPrintTemplate";
import { useRouter } from "next/router";
import { FindCellQuery, FindCellQueryVariables, useFindCellQuery } from "../../../../graphql/generated";
import graphlqlRequestClient from "../../../../client/graphqlRequestClient";


const EvaluationPrintScreen = () => {
  const evaluationPritRef = useRef<HTMLDivElement | null>(null);

  const router = useRouter()
  const { id } = router.query

  const { isLoading, data } = useFindCellQuery<
    FindCellQuery,
    FindCellQueryVariables
  >(
    graphlqlRequestClient,
    {
      id: Number(id),
    },
    {
      enabled: !!Number(id),
      staleTime: 5 * 60 * 1000,
      cacheTime: 10 * 60 * 1000,
    }
  );

  return (
    <Layout>
      <Head>
        <title>INTOUCH CHURCH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageLayout>
        <SectionContainer>
          <BlockContainer firstBlock>
            <div className="lg:hidden">
              모바일에서는 사용할 수 없습니다
            </div>
            <header className="hidden lg:block relative">
              <div className="border-b border-gray-900/10 py-10">
                <div className="items-center justify-between">
                  <div className="flex items-center gap-x-6">
                    <h1>
                      <div className="text-sm leading-6 text-gray-500">
                        <span className="text-gray-700">2023. 05. 07.</span>
                      </div>
                      <div className="mt-1 text-base font-semibold leading-6 text-gray-900">
                        {data?.findCell.name}
                      </div>
                    </h1>
                  </div>
                  <div className="flex items-center">
                    <ReactToPrint
                      trigger={() => (
                        <button className="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                          Print
                        </button>
                      )}
                      content={() => evaluationPritRef.current}
                    />
                  </div>
                </div>
              </div>
            </header>
            <CellEvaluationFormPrintTemplate ref={evaluationPritRef} cell={data}/>
          </BlockContainer>
        </SectionContainer>
      </PageLayout>
    </Layout>
  );
};

export default EvaluationPrintScreen;
